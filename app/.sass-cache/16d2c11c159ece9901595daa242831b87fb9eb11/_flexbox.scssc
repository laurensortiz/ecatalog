3.2.5 (Media Mark)
08aa70f143bf0c06450046332dcc74011d8172c5
o:Sass::Tree::RootNode
:
@linei:@template"ß.@import "shared";

// NOTE:
// All mixins for the @box spec have been written assuming they'll be fed property values that
// correspond to the standard spec.  Some mixins can be fed values from the @box spec, but don't
// rely on it.  The `legacy-order` mixin will increment the value fed to it because the @box
// `box-ordinal-group` property begins indexing at 1, while the modern `order` property begins
// indexing at 0.

// ---------------------------------------------------------------------- | @flex

// September 2012 Candidate Recommendation (http://www.w3.org/TR/2012/CR-css3-flexbox-20120918/)
// NOTE: FF did not support wrapping until version ??.  Because the `display: flex` property
// is wrapped in a `@supports (flex-wrap: wrap)` block (when $flex-wrap-required or the $wrap
// argument to the `display-flex` mixin is set to `true`), it will Just Work(TM) when support is
// finally added
// Chrome 21 (prefixed)
// Opera 12.1 (unprefixed)
// Firefox 20 (unprefixed)
$flex-support: not -moz, -webkit, not -ms, not -o, not -khtml !default;

// if `true`, `$flex-legacy-enabled` is treated as false and an `@supports` block is added to 
// the display property to hide the standard value from versions of Firefox that support the
// unprefixed properties, but do not support wrapping
// (this includes suppressing the automatic emittion of @box properties)
$flex-wrap-required : false !default;

// ---------------------------------------------------------------------- | @flexbox

// March 2012 Working Draft (http://www.w3.org/TR/2012/WD-css3-flexbox-20120322/)
// Chrome 17 (prefixed)
// Internet Explorer 10 (prefixed)
$flexbox-support: not -moz, -webkit, -ms, not -o, not -khtml, not standard !default;

// ---------------------------------------------------------------------- | @box

// July 2009 Working Draft (http://www.w3.org/TR/2009/WD-css3-flexbox-20090723/)
// NOTE: no browser that implements this spec is known to support `box-lines: multiple`
// Chrome 4? (prefixed)
// Safari 3.1 (prefixed)
// Firefox <20 (prefixed)
$box-support: -moz, -webkit, not -ms, not -o, not -khtml, not standard !default;

// If `true`, the @box properties will be emitted as part of the normal mixin call
// (if this is false, you're still free to explicitly call the legacy mixins yourself)
$flex-legacy-enabled: false !default;

// ====================================================================================================
//                                                                       | Common
// ====================================================================================================

// function for converting a value from the standard specification to one that is comparable from
// an older specification
@function flex-translate-value($value, $version: box) {
	$value: unquote($value);

	@if $value == flex {
		@return if($version == box, box, flexbox);
	} @else if $value == inline-flex {
		@return if($version == box, inline-box, inline-flexbox);
	} @else if $value == flex-start {
		@return start;
	} @else if $value == flex-end {
		@return end;
	} @else if $value == space-between {
		@return justify;
	} @else if $value == space-around { // @box doesn't have a value equivalent to `space-around`
		@return if($version == box, justify, distribute);
	}
	@return $value;
}

@function flex-support-either() {
	$common: ();
	@for $i from 1 through length($flex-support) {
		$common: append($common, nth($flex-support, $i) or nth($flexbox-support, $i), comma);
	}
	@return $common;
}

// ====================================================================================================
//                                                                       | Display Property
// ====================================================================================================

// $type: flex | inline-flex
@mixin display-flex($type: flex, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-display-flex($type);
	}
	
	@include experimental-value(display, flex-translate-value($type, flexbox), $flexbox-support...);
	
	// if `$wrap` is true, then we need to suppress official support as generated by the `experimental()`
	// mixin so that we can insert it inside an `@supports` block
	$flex-support-standard: true;
	$flex-support-list: $flex-support;
	@if length($flex-support) > 5 {
		$flex-support-standard: nth($flex-support, 6);
		// a `slice()` function would really be handy here...
		$flex-support-list: nth($flex-support, 1), nth($flex-support, 2), nth($flex-support, 3), nth($flex-support, 4), nth($flex-support, 5);
	}
	$flex-support-list: append($flex-support-list, if($wrap, false, $flex-support-standard));
	@include experimental-value(display, $type, $flex-support-list...);
	
	@if $wrap and $flex-support-standard {
		@supports (flex-wrap: wrap) {
			display: $type;
		}
	}
}

@mixin legacy-display-flex($type: flex) {
	@include experimental-value(display, flex-translate-value($type, box), $box-support...);
}

// ====================================================================================================
//                                                                       | Flex Container Properties
// ====================================================================================================

// $value: <'flex-direction'> || <'flex-wrap'>
@mixin flex-flow($value: row nowrap, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-flow($value);
	}
	
	@include experimental(flex-flow, $value, flex-support-either()...);
}

@mixin legacy-flex-flow($value: row nowrap) {
	@if length($value) > 1 { // @box version doesn't have a shorthand
		@include legacy-flex-direction(nth($value, 1));
		@include legacy-flex-wrap(nth($value, 2));
	} @else {
		$value: unquote($value);
		@if $value == row or $value == row-reverse or $value == column or $value == column-reverse {
			@include legacy-flex-direction($value);
		} @else {
			@include legacy-flex-wrap($value);
		}
	}
}

// ----------------------------------------------------------------------

// $value: row | row-reverse | column | column-reverse
@mixin flex-direction($value: row, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-direction($value);
	}
	
	@include experimental(flex-direction, $value, flex-support-either()...);
}

@mixin legacy-flex-direction($value: row) {
	$value: unquote($value);
	@include experimental(box-orient, if($value == row or $value == row-reverse, horizontal, vertical), $box-support...);
	@include experimental(box-direction, if($value == row-reverse or $value == column-reverse, reverse, normal), $box-support...);
}

// ----------------------------------------------------------------------

// $value: nowrap | wrap | wrap-reverse
@mixin flex-wrap($value: nowrap, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-wrap($value);
	}
	
	@include experimental(flex-wrap, $value, flex-support-either()...);
}

@mixin legacy-flex-wrap($value: nowrap) {
	// NOTE: @box has no equivalent of wrap-reverse
	@include experimental(box-lines, if($value == nowrap, single, multiple), $box-support...);
}

// ----------------------------------------------------------------------

// Distributing extra space along the "main axis"
// $value: flex-start | flex-end | center | space-between | space-around
@mixin justify-content($value: flex-start, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-justify-content($value);
	}
	
	@include experimental(flex-pack, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(justify-content, $value, $flex-support...);
}

@mixin legacy-justify-content($value: flex-start) {
	@include experimental(box-pack, flex-translate-value($value, box), $box-support...);
}

// ----------------------------------------------------------------------

// Distributing extra space along the "cross axis"
// $value: flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($value: flex-start, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-align-content($value);
	}
	
	@include experimental(flex-line-pack, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(align-content, $value, $flex-support...);
}

@mixin legacy-align-content($value: flex-start) {
	@include experimental(box-align, flex-translate-value($value, box), $box-support...);
}

// ----------------------------------------------------------------------

// Align items along the "cross axis"
// $value: flex-start | flex-end | center | baseline | stretch
@mixin align-items($value: stretch) { // the flex container
	// There is no @box version of this property
	@include experimental(flex-align, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(align-items, $value, $flex-support...);
}

// ====================================================================================================
//                                                                       | Flex Item Properties
// ====================================================================================================

// $value: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
@mixin flex($value: 0 1 auto, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	$value: unquote($value);
	@if $legacy and unitless(nth($value, 1)) {
		// @box version does not have a shorthand, see `legacy-flex-grow`
		@include legacy-flex-grow(nth($value, 1));
	}
	
	@include experimental(flex, $value, flex-support-either()...);
}

// ----------------------------------------------------------------------

// $value: Integer
@mixin flex-grow($value: 0, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-grow($value);
	}
	
	// There is no @flexbox version of this property
	@include experimental(flex-grow, $value, $flex-support...);
}

@mixin legacy-flex-grow($value: 0) {
	@include experimental(box-flex, $value, $box-support...);
}

// ----------------------------------------------------------------------

// $value: Integer
@mixin flex-shrink($value: 1) {
	// There is no @box version of this property
	// There is no @flexbox version of this property
	@include experimental(flex-shrink, $value, $flex-support...);
}

// ----------------------------------------------------------------------

// $value: united number (eg: 100px)
@mixin flex-basis($value: auto) {
	// There is no @box version of this property
	// There is no @flexbox version of this property
	@include experimental(flex-basis, $value, $flex-support...);
}

// ----------------------------------------------------------------------

// Align items along the "cross axis" -- overrides `align-items` value on individual items
// $value: auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($value: auto) { // children of flex containers
	// There is no @box version of this property
	@include experimental(flex-item-align, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(align-self, $value, $flex-support...);
}

// ----------------------------------------------------------------------

// $value: Integer
@mixin order($value: 0, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-order($value);
	}
	
	@include experimental(flex-order, $value, $flexbox-support...);
	@include experimental(order, $value, $flex-support...);
}

@mixin legacy-order($value: 0) {
	// the @box spec starts the ordering at 1 instead of 0 like the modern specs
	@include experimental(box-ordinal-group, $value + 1, $box-support...);
}
:@has_childrenT:@options{ :@children[Go:Sass::Tree::ImportNode:@imported_file0;i;0:@imported_filename"shared;	@;
[ o:Sass::Tree::CommentNode
:
@type:silent;i;	@;
[ :@value["/* NOTE:
 * All mixins for the @box spec have been written assuming they'll be fed property values that
 * correspond to the standard spec.  Some mixins can be fed values from the @box spec, but don't
 * rely on it.  The `legacy-order` mixin will increment the value fed to it because the @box
 * `box-ordinal-group` property begins indexing at 1, while the modern `order` property begins
 * indexing at 0. */o;
;;;i;	@;
[ ;["Y/* ---------------------------------------------------------------------- | @flex */o;
;;;i;	@;
[ ;["Þ/* September 2012 Candidate Recommendation (http://www.w3.org/TR/2012/CR-css3-flexbox-20120918/)
 * NOTE: FF did not support wrapping until version ??.  Because the `display: flex` property
 * is wrapped in a `@supports (flex-wrap: wrap)` block (when $flex-wrap-required or the $wrap
 * argument to the `display-flex` mixin is set to `true`), it will Just Work(TM) when support is
 * finally added
 * Chrome 21 (prefixed)
 * Opera 12.1 (unprefixed)
 * Firefox 20 (unprefixed) */o:Sass::Tree::VariableNode:@guarded"!default:
@name"flex-support;i:
@expro:Sass::Script::List	;i;	@:@separator:
comma;[
o:!Sass::Script::UnaryOperation	:@operando:Sass::Script::String	;:identifier;i;	@;"	-moz;i:@operator:not;	@o;	;;;i;	@;"-webkito;	;o;	;;;i;	@;"-ms;i;;;	@o;	;o;	;;;i;	@;"-o;i;;;	@o;	;o;	;;;i;	@;"-khtml;i;;;	@;	@;
[ o;
;;;i;	@;
[ ;["=/* if `true`, `$flex-legacy-enabled` is treated as false and an `@supports` block is added to 
 * the display property to hide the standard value from versions of Firefox that support the
 * unprefixed properties, but do not support wrapping
 * (this includes suppressing the automatic emittion of @box properties) */o;;"!default;"flex-wrap-required;i;o:Sass::Script::Bool;i;	@;F;	@;
[ o;
;;;i!;	@;
[ ;["\/* ---------------------------------------------------------------------- | @flexbox */o;
;;;i#;	@;
[ ;["/* March 2012 Working Draft (http://www.w3.org/TR/2012/WD-css3-flexbox-20120322/)
 * Chrome 17 (prefixed)
 * Internet Explorer 10 (prefixed) */o;;"!default;"flexbox-support;i&;o;	;i&;	@;;;[o;	;o;	;;;i&;	@;"	-moz;i&;;;	@o;	;;;i&;	@;"-webkito;	;;;i&;	@;"-mso;	;o;	;;;i&;	@;"-o;i&;;;	@o;	;o;	;;;i&;	@;"-khtml;i&;;;	@o;	;o;	;;;i&;	@;"standard;i&;;;	@;	@;
[ o;
;;;i(;	@;
[ ;["X/* ---------------------------------------------------------------------- | @box */o;
;;;i*;	@;
[ ;["ö/* July 2009 Working Draft (http://www.w3.org/TR/2009/WD-css3-flexbox-20090723/)
 * NOTE: no browser that implements this spec is known to support `box-lines: multiple`
 * Chrome 4? (prefixed)
 * Safari 3.1 (prefixed)
 * Firefox <20 (prefixed) */o;;"!default;"box-support;i/;o;	;i/;	@;;;[o;	;;;i/;	@;"	-mozo;	;;;i/;	@;"-webkito;	;o;	;;;i/;	@;"-ms;i/;;;	@o;	;o;	;;;i/;	@;"-o;i/;;;	@o;	;o;	;;;i/;	@;"-khtml;i/;;;	@o;	;o;	;;;i/;	@;"standard;i/;;;	@;	@;
[ o;
;;;i1;	@;
[ ;["¬/* If `true`, the @box properties will be emitted as part of the normal mixin call
 * (if this is false, you're still free to explicitly call the legacy mixins yourself) */o;;"!default;"flex-legacy-enabled;i3;o;;i3;	@;F;	@;
[ o;
;;;i5;	@;
[ ;["$/* ====================================================================================================
 *                                                                       | Common
 * ==================================================================================================== */o;
;;;i9;	@;
[ ;["~/* function for converting a value from the standard specification to one that is comparable from
 * an older specification */o:Sass::Tree::FunctionNode;"flex-translate-value;i;;T;	@;
[o;;0;"
value;i<;o:Sass::Script::Funcall;"unquote;i<:@keywords{ ;	@:@splat0:
@args[o:Sass::Script::Variable	;"
value;i<;	@:@underscored_name"
value;	@;
[ u:Sass::Tree::IfNodee
[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"
value:
@linei>:@options{ :@underscored_name"
value;	i>:@operator:eq;
@	:@operand2o:Sass::Script::String	:
@type:identifier;	i>;
@	:@value"	flexu:Sass::Tree::IfNodel[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"
value:
@linei@:@options{ :@underscored_name"
value;	i@:@operator:eq;
@	:@operand2o:Sass::Script::String	:
@type:identifier;	i@;
@	:@value"inline-flexu:Sass::Tree::IfNode^[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"
value:
@lineiB:@options{ :@underscored_name"
value;	iB:@operator:eq;
@	:@operand2o:Sass::Script::String	:
@type:identifier;	iB;
@	:@value"flex-startu:Sass::Tree::IfNode[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"
value:
@lineiD:@options{ :@underscored_name"
value;	iD:@operator:eq;
@	:@operand2o:Sass::Script::String	:
@type:identifier;	iD;
@	:@value"flex-endu:Sass::Tree::IfNode¼[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"
value:
@lineiF:@options{ :@underscored_name"
value;	iF:@operator:eq;
@	:@operand2o:Sass::Script::String	:
@type:identifier;	iF;
@	:@value"space-betweenu:Sass::Tree::IfNoded[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"
value:
@lineiH:@options{ :@underscored_name"
value;	iH:@operator:eq;
@	:@operand2o:Sass::Script::String	:
@type:identifier;	iH;
@	:@value"space-around0[o:Sass::Tree::CommentNode
;:silent;	iH;
@	:@children[ ;["A/* @box doesn't have a value equivalent to `space-around` */o:Sass::Tree::ReturnNode	;	iI:
@expro:Sass::Script::Funcall;"if;	iI:@keywords{ ;
@	:@splat0:
@args[o; 
;o;	;"version;	iI;
@	;"version;	iI;;;
@	;o;	;;;	iI;
@	;"boxo;	;;;	iI;
@	;"justifyo;	;;;	iI;
@	;"distribute;
@	;[ [o:Sass::Tree::ReturnNode	;	iG:
@expro;	;;;	iG;
@	;"justify;
@	:@children[ [o:Sass::Tree::ReturnNode	;	iE:
@expro;	;;;	iE;
@	;"end;
@	:@children[ [o:Sass::Tree::ReturnNode	;	iC:
@expro;	;;;	iC;
@	;"
start;
@	:@children[ [o:Sass::Tree::ReturnNode	;	iA:
@expro:Sass::Script::Funcall;"if;	iA:@keywords{ ;
@	:@splat0:
@args[o; 
;o;	;"version;	iA;
@	;"version;	iA;;;
@	;o;	;;;	iA;
@	;"boxo;	;;;	iA;
@	;"inline-boxo;	;;;	iA;
@	;"inline-flexbox;
@	:@children[ [o:Sass::Tree::ReturnNode	;	i?:
@expro:Sass::Script::Funcall;"if;	i?:@keywords{ ;
@	:@splat0:
@args[o; 
;o;	;"version;	i?;
@	;"version;	i?;;;
@	;o;	;;;	i?;
@	;"boxo;	;;;	i?;
@	;"boxo;	;;;	i?;
@	;"flexbox;
@	:@children[ o:Sass::Tree::ReturnNode	;iK;o;%	;"
value;iK;	@;&"
value;	@;
[ ;#0;$[[o;%;"
value;	@;&"
value0[o;%;"version;	@;&"versiono;	;;;i;;	@;"boxo; ;"flex-support-either;iN;T;	@;
[o;;0;"common;iO;o;	;iO;	@;:
space;[ ;	@;
[ o:Sass::Tree::ForNode:@exclusiveF;iP:
@fromo:Sass::Script::Number:@denominator_units[ ;iP:@numerator_units[ ;	@:@original"1;i;T;	@:	@var"i;
[o;;0;"common;iQ;o;!;"append;iQ;"{ ;	@;#0;$[o;%	;"common;iQ;	@;&"commono:Sass::Script::Operation
:@operand1o;!;"nth;iQ;"{ ;	@;#0;$[o;%	;"flex-support;iQ;	@;&"flex_supporto;%	;"i;iQ;	@;&"i;iQ;:or;	@:@operand2o;!;"nth;iQ;"{ ;	@;#0;$[o;%	;"flexbox-support;iQ;	@;&"flexbox_supporto;%	;"i;iQ;	@;&"io;	;;;iQ;	@;"
comma;	@;
[ :@too;!;"length;iP;"{ ;	@;#0;$[o;%	;"flex-support;iP;	@;&"flex_supporto;(	;iS;o;%	;"common;iS;	@;&"common;	@;
[ ;#0;$[ o;
;;;iV;	@;
[ ;["./* ====================================================================================================
 *                                                                       | Display Property
 * ==================================================================================================== */o;
;;;iZ;	@;
[ ;["$/* $type: flex | inline-flex */o:Sass::Tree::MixinDefNode;"display-flex;i[;T;	@;
[u;'~[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:
@linei\:@options{ :@underscored_name"legacy;	i\:@operator:and;
@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	i\;
@	;"	wrap;	i\;:not;
@	0[o:Sass::Tree::MixinNode;"legacy-display-flex;	i]:@keywords{ ;
@	:@children[ :@splat0:
@args[o;	;"	type;	i];
@	;"	typeo:Sass::Tree::MixinNode;"experimental-value;i`;"{ ;	@;
[ ;#o;%	;"flexbox-support;i`;	{ ;&"flexbox_support;$[o;	;;;i`;	@;"displayo;!;"flex-translate-value;i`;"{ ;	@;#0;$[o;%	;"	type;i`;	@;&"	typeo;	;;;i`;	@;"flexboxo;
;;;ib;	@;
[ ;["¦/* if `$wrap` is true, then we need to suppress official support as generated by the `experimental()`
 * mixin so that we can insert it inside an `@supports` block */o;;0;"flex-support-standard;id;o;;id;	@;T;	@;
[ o;;0;"flex-support-list;ie;o;%	;"flex-support;ie;	@;&"flex_support;	@;
[ u;'ù[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@name"length:
@lineif:@keywords{ :@options{ :@splat0:
@args[o:Sass::Script::Variable	;"flex-support;	if;@
:@underscored_name"flex_support;	if:@operator:gt;@
:@operand2o:Sass::Script::Number:@denominator_units[ ;	if:@numerator_units[ ;@
:@original"5:@valuei
0[o:Sass::Tree::VariableNode:@guarded0;"flex-support-standard;	ig:
@expro;;"nth;	ig;
{ ;@
;0;[o;	;"flex-support;	ig;@
;"flex_supporto;;@;	ig;[ ;@
;"6;i;@
:@children[ o:Sass::Tree::CommentNode
:
@type:silent;	ih;@
;[ ;["=/* a `slice()` function would really be handy here... */o;;0;"flex-support-list;	ii;o:Sass::Script::List	;	ii;@
:@separator:
comma;[
o;;"nth;	ii;
{ ;@
;0;[o;	;"flex-support;	ii;@
;"flex_supporto;;@;	ii;[ ;@
;"1;io;;"nth;	ii;
{ ;@
;0;[o;	;"flex-support;	ii;@
;"flex_supporto;;@;	ii;[ ;@
;"2;io;;"nth;	ii;
{ ;@
;0;[o;	;"flex-support;	ii;@
;"flex_supporto;;@;	ii;[ ;@
;"3;io;;"nth;	ii;
{ ;@
;0;[o;	;"flex-support;	ii;@
;"flex_supporto;;@;	ii;[ ;@
;"4;i	o;;"nth;	ii;
{ ;@
;0;[o;	;"flex-support;	ii;@
;"flex_supporto;;@;	ii;[ ;@
;"5;i
;@
;[ o;;0;"flex-support-list;ik;o;!;"append;ik;"{ ;	@;#0;$[o;%	;"flex-support-list;ik;	@;&"flex_support_listo;!;"if;ik;"{ ;	@;#0;$[o;%	;"	wrap;ik;	@;&"	wrapo;;ik;	@;Fo;%	;"flex-support-standard;ik;	@;&"flex_support_standard;	@;
[ o;8;"experimental-value;il;"{ ;	@;
[ ;#o;%	;"flex-support-list;il;	{ ;&"flex_support_list;$[o;	;;;il;	@;"displayo;%	;"	type;il;	@;&"	typeu;'0[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"	wrap:
@linein:@options{ :@underscored_name"	wrap;	in:@operator:and;
@	:@operand2o;	;"flex-support-standard;	in;
@	;"flex_support_standard0[o:Sass::Tree::SupportsNode;"supports;	io:@has_childrenT;
@	:
@tabsi :@conditiono: Sass::Supports::Declaration;o:Sass::Script::String	:
@type:identifier;	io;
@	:@value"flex-wrap;o;	;;;	io;
@	;"	wrap:@children[o:Sass::Tree::PropNode;["display;	ip;
@	;i ;[ :@prop_syntax:new;o;	;"	type;	ip;
@	;"	type;" ;#0;$[[o;%;"	type;	@;&"	typeo;	;;;i[;	@;"	flex[o;%;"	wrap;	@;&"	wrapo;%	;"flex-wrap-required;i[;	@;&"flex_wrap_required[o;%;"legacy;	@;&"legacyo;%	;"flex-legacy-enabled;i[;	@;&"flex_legacy_enabledo;7;"legacy-display-flex;iu;T;	@;
[o;8;"experimental-value;iv;"{ ;	@;
[ ;#o;%	;"box-support;iv;	{ ;&"box_support;$[o;	;;;iv;	@;"displayo;!;"flex-translate-value;iv;"{ ;	@;#0;$[o;%	;"	type;iv;	@;&"	typeo;	;;;iv;	@;"box;#0;$[[o;%;"	type;	@;&"	typeo;	;;;iu;	@;"	flexo;
;;;iy;	@;
[ ;["7/* ====================================================================================================
 *                                                                       | Flex Container Properties
 * ==================================================================================================== */o;
;;;i};	@;
[ ;["6/* $value: <'flex-direction'> || <'flex-wrap'> */o;7;"flex-flow;i~;T;	@;
[u;'[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:
@linei:@options{ :@underscored_name"legacy;	i:@operator:and;
@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	i;
@	;"	wrap;	i;:not;
@	0[o:Sass::Tree::MixinNode;"legacy-flex-flow;	i{:@keywords{ ;
@	:@children[ :@splat0:
@args[o;	;"
value;	i{;
@	;"
valueo;8;"experimental;i~;"{ ;	@;
[ ;#o;!;"flex-support-either;i~;"{ ;	{ ;#0;$[ ;$[o;	;;;i~;	@;"flex-flowo;%	;"
value;i~;	@;&"
value;#0;$[[o;%;"
value;	@;&"
valueo;	;i~;	@;;);[o;	;;;i~;	@;"rowo;	;;;i~;	@;"nowrap[o;%;"	wrap;	@;&"	wrapo;%	;"flex-wrap-required;i~;	@;&"flex_wrap_required[o;%;"legacy;	@;&"legacyo;%	;"flex-legacy-enabled;i~;	@;&"flex_legacy_enabledo;7;"legacy-flex-flow;i;T;	@;
[u;'£[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@name"length:
@linei:@keywords{ :@options{ :@splat0:
@args[o:Sass::Script::Variable	;"
value;	i;@
:@underscored_name"
value;	i:@operator:gt;@
:@operand2o:Sass::Script::Number:@denominator_units[ ;	i:@numerator_units[ ;@
:@original"1:@valueiu:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:@guarded0:
@name"
value:
@linei:
@expro:Sass::Script::Funcall;"unquote;i:@keywords{ :@options{ :@splat0:
@args[o:Sass::Script::Variable	;"
value;i;@:@underscored_name"
value;@:@children[ u:Sass::Tree::IfNode[o:Sass::Script::Operation
:@operand1o; 
;o; 
;o; 
;o:Sass::Script::Variable	:
@name"
value:
@linei:@options{ :@underscored_name"
value;	i:@operator:eq;
@:@operand2o:Sass::Script::String	:
@type:identifier;	i;
@:@value"row;	i;:or;
@;o; 
;o;	;"
value;	i;
@;"
value;	i;;;
@;o;	;;;	i;
@;"row-reverse;	i;;;
@;o; 
;o;	;"
value;	i;
@;"
value;	i;;;
@;o;	;;;	i;
@;"column;	i;;;
@;o; 
;o;	;"
value;	i;
@;"
value;	i;;;
@;o;	;;;	i;
@;"column-reverseu:Sass::Tree::IfNodeÂ[00[o:Sass::Tree::MixinNode:
@name"legacy-flex-wrap:
@linei:@keywords{ :@options{ :@children[ :@splat0:
@args[o:Sass::Script::Variable	;"
value;i;	@
:@underscored_name"
value[o:Sass::Tree::MixinNode;"legacy-flex-direction;	i:@keywords{ ;
@:@children[ :@splat0:
@args[o;	;"
value;	i;
@;"
value[o:Sass::Tree::CommentNode
:
@type:silent;	i;@
:@children[ ;["0/* @box version doesn't have a shorthand */o:Sass::Tree::MixinNode;"legacy-flex-direction;	i;
{ ;@
;[ ;0;[o;;"nth;	i;
{ ;@
;0;[o;	;"
value;	i;@
;"
valueo;;@;	i;[ ;@
;"1;io;;"legacy-flex-wrap;	i;
{ ;@
;[ ;0;[o;;"nth;	i;
{ ;@
;0;[o;	;"
value;	i;@
;"
valueo;;@;	i;[ ;@
;"2;i;#0;$[[o;%;"
value;	@;&"
valueo;	;i;	@;;);[o;	;;;i;	@;"rowo;	;;;i;	@;"nowrapo;
;;;i;	@;
[ ;["Q/* ---------------------------------------------------------------------- */o;
;;;i;	@;
[ ;[">/* $value: row | row-reverse | column | column-reverse */o;7;"flex-direction;i;T;	@;
[u;'[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:
@linei:@options{ :@underscored_name"legacy;	i:@operator:and;
@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	i;
@	;"	wrap;	i;:not;
@	0[o:Sass::Tree::MixinNode;"legacy-flex-direction;	i:@keywords{ ;
@	:@children[ :@splat0:
@args[o;	;"
value;	i;
@	;"
valueo;8;"experimental;i;"{ ;	@;
[ ;#o;!;"flex-support-either;i;"{ ;	{ ;#0;$[ ;$[o;	;;;i;	@;"flex-directiono;%	;"
value;i;	@;&"
value;#0;$[[o;%;"
value;	@;&"
valueo;	;;;i;	@;"row[o;%;"	wrap;	@;&"	wrapo;%	;"flex-wrap-required;i;	@;&"flex_wrap_required[o;%;"legacy;	@;&"legacyo;%	;"flex-legacy-enabled;i;	@;&"flex_legacy_enabledo;7;"legacy-flex-direction;i;T;	@;
[o;;0;"
value;i;o;!;"unquote;i;"{ ;	@;#0;$[o;%	;"
value;i;	@;&"
value;	@;
[ o;8;"experimental;i;"{ ;	@;
[ ;#o;%	;"box-support;i;	{ ;&"box_support;$[o;	;;;i;	@;"box-oriento;!;"if;i;"{ ;	@;#0;$[o;2
;3o;2
;3o;%	;"
value;i;	@;&"
value;i;:eq;	@;5o;	;;;i;	@;"row;i;;4;	@;5o;2
;3o;%	;"
value;i;	@;&"
value;i;;9;	@;5o;	;;;i;	@;"row-reverseo;	;;;i;	@;"horizontalo;	;;;i;	@;"verticalo;8;"experimental;i;"{ ;	@;
[ ;#o;%	;"box-support;i;	{ ;&"box_support;$[o;	;;;i;	@;"box-directiono;!;"if;i;"{ ;	@;#0;$[o;2
;3o;2
;3o;%	;"
value;i;	@;&"
value;i;;9;	@;5o;	;;;i;	@;"row-reverse;i;;4;	@;5o;2
;3o;%	;"
value;i;	@;&"
value;i;;9;	@;5o;	;;;i;	@;"column-reverseo;	;;;i;	@;"reverseo;	;;;i;	@;"normal;#0;$[[o;%;"
value;	@;&"
valueo;	;;;i;	@;"rowo;
;;;i ;	@;
[ ;["Q/* ---------------------------------------------------------------------- */o;
;;;i¢;	@;
[ ;["//* $value: nowrap | wrap | wrap-reverse */o;7;"flex-wrap;i£;T;	@;
[u;'[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:
@linei¤:@options{ :@underscored_name"legacy;	i¤:@operator:and;
@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	i¤;
@	;"	wrap;	i¤;:not;
@	0[o:Sass::Tree::MixinNode;"legacy-flex-wrap;	i¥:@keywords{ ;
@	:@children[ :@splat0:
@args[o;	;"
value;	i¥;
@	;"
valueo;8;"experimental;i¨;"{ ;	@;
[ ;#o;!;"flex-support-either;i¨;"{ ;	{ ;#0;$[ ;$[o;	;;;i¨;	@;"flex-wrapo;%	;"
value;i¨;	@;&"
value;#0;$[[o;%;"
value;	@;&"
valueo;	;;;i£;	@;"nowrap[o;%;"	wrap;	@;&"	wrapo;%	;"flex-wrap-required;i£;	@;&"flex_wrap_required[o;%;"legacy;	@;&"legacyo;%	;"flex-legacy-enabled;i£;	@;&"flex_legacy_enabledo;7;"legacy-flex-wrap;i«;T;	@;
[o;
;;;i¬;	@;
[ ;["7/* NOTE: @box has no equivalent of wrap-reverse */o;8;"experimental;i­;"{ ;	@;
[ ;#o;%	;"box-support;i­;	{ ;&"box_support;$[o;	;;;i­;	@;"box-lineso;!;"if;i­;"{ ;	@;#0;$[o;2
;3o;%	;"
value;i­;	@;&"
value;i­;;9;	@;5o;	;;;i­;	@;"nowrapo;	;;;i­;	@;"singleo;	;;;i­;	@;"multiple;#0;$[[o;%;"
value;	@;&"
valueo;	;;;i«;	@;"nowrapo;
;;;i°;	@;
[ ;["Q/* ---------------------------------------------------------------------- */o;
;;;i²;	@;
[ ;["}/* Distributing extra space along the "main axis"
 * $value: flex-start | flex-end | center | space-between | space-around */o;7;"justify-content;i´;T;	@;
[u;'[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:
@lineiµ:@options{ :@underscored_name"legacy;	iµ:@operator:and;
@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	iµ;
@	;"	wrap;	iµ;:not;
@	0[o:Sass::Tree::MixinNode;"legacy-justify-content;	i¶:@keywords{ ;
@	:@children[ :@splat0:
@args[o;	;"
value;	i¶;
@	;"
valueo;8;"experimental;i¹;"{ ;	@;
[ ;#o;%	;"flexbox-support;i¹;	{ ;&"flexbox_support;$[o;	;;;i¹;	@;"flex-packo;!;"flex-translate-value;i¹;"{ ;	@;#0;$[o;%	;"
value;i¹;	@;&"
valueo;	;;;i¹;	@;"flexboxo;8;"experimental;iº;"{ ;	@;
[ ;#o;%	;"flex-support;iº;	{ ;&"flex_support;$[o;	;;;iº;	@;"justify-contento;%	;"
value;iº;	@;&"
value;#0;$[[o;%;"
value;	@;&"
valueo;	;;;i´;	@;"flex-start[o;%;"	wrap;	@;&"	wrapo;%	;"flex-wrap-required;i´;	@;&"flex_wrap_required[o;%;"legacy;	@;&"legacyo;%	;"flex-legacy-enabled;i´;	@;&"flex_legacy_enabledo;7;"legacy-justify-content;i½;T;	@;
[o;8;"experimental;i¾;"{ ;	@;
[ ;#o;%	;"box-support;i¾;	{ ;&"box_support;$[o;	;;;i¾;	@;"box-packo;!;"flex-translate-value;i¾;"{ ;	@;#0;$[o;%	;"
value;i¾;	@;&"
valueo;	;;;i¾;	@;"box;#0;$[[o;%;"
value;	@;&"
valueo;	;;;i½;	@;"flex-starto;
;;;iÁ;	@;
[ ;["Q/* ---------------------------------------------------------------------- */o;
;;;iÃ;	@;
[ ;["/* Distributing extra space along the "cross axis"
 * $value: flex-start | flex-end | center | space-between | space-around | stretch */o;7;"align-content;iÅ;T;	@;
[u;'[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:
@lineiÆ:@options{ :@underscored_name"legacy;	iÆ:@operator:and;
@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	iÆ;
@	;"	wrap;	iÆ;:not;
@	0[o:Sass::Tree::MixinNode;"legacy-align-content;	iÇ:@keywords{ ;
@	:@children[ :@splat0:
@args[o;	;"
value;	iÇ;
@	;"
valueo;8;"experimental;iÊ;"{ ;	@;
[ ;#o;%	;"flexbox-support;iÊ;	{ ;&"flexbox_support;$[o;	;;;iÊ;	@;"flex-line-packo;!;"flex-translate-value;iÊ;"{ ;	@;#0;$[o;%	;"
value;iÊ;	@;&"
valueo;	;;;iÊ;	@;"flexboxo;8;"experimental;iË;"{ ;	@;
[ ;#o;%	;"flex-support;iË;	{ ;&"flex_support;$[o;	;;;iË;	@;"align-contento;%	;"
value;iË;	@;&"
value;#0;$[[o;%;"
value;	@;&"
valueo;	;;;iÅ;	@;"flex-start[o;%;"	wrap;	@;&"	wrapo;%	;"flex-wrap-required;iÅ;	@;&"flex_wrap_required[o;%;"legacy;	@;&"legacyo;%	;"flex-legacy-enabled;iÅ;	@;&"flex_legacy_enabledo;7;"legacy-align-content;iÎ;T;	@;
[o;8;"experimental;iÏ;"{ ;	@;
[ ;#o;%	;"box-support;iÏ;	{ ;&"box_support;$[o;	;;;iÏ;	@;"box-aligno;!;"flex-translate-value;iÏ;"{ ;	@;#0;$[o;%	;"
value;iÏ;	@;&"
valueo;	;;;iÏ;	@;"box;#0;$[[o;%;"
value;	@;&"
valueo;	;;;iÎ;	@;"flex-starto;
;;;iÒ;	@;
[ ;["Q/* ---------------------------------------------------------------------- */o;
;;;iÔ;	@;
[ ;["l/* Align items along the "cross axis"
 * $value: flex-start | flex-end | center | baseline | stretch */o;7;"align-items;iÖ;T;	@;
[o;
;;;iÖ;	@;
[ ;["J/* the flex container
 * There is no @box version of this property */o;8;"experimental;iØ;"{ ;	@;
[ ;#o;%	;"flexbox-support;iØ;	{ ;&"flexbox_support;$[o;	;;;iØ;	@;"flex-aligno;!;"flex-translate-value;iØ;"{ ;	@;#0;$[o;%	;"
value;iØ;	@;&"
valueo;	;;;iØ;	@;"flexboxo;8;"experimental;iÙ;"{ ;	@;
[ ;#o;%	;"flex-support;iÙ;	{ ;&"flex_support;$[o;	;;;iÙ;	@;"align-itemso;%	;"
value;iÙ;	@;&"
value;#0;$[[o;%;"
value;	@;&"
valueo;	;;;iÖ;	@;"stretcho;
;;;iÜ;	@;
[ ;["2/* ====================================================================================================
 *                                                                       | Flex Item Properties
 * ==================================================================================================== */o;
;;;ià;	@;
[ ;["N/* $value: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ] */o;7;"	flex;iá;T;	@;
[o;;0;"
value;iâ;o;!;"unquote;iâ;"{ ;	@;#0;$[o;%	;"
value;iâ;	@;&"
value;	@;
[ u;'Ä[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:
@lineiã:@options{ :@underscored_name"legacy;	iã:@operator:and;
@	:@operand2o:Sass::Script::Funcall;"unitless;	iã:@keywords{ ;
@	:@splat0:
@args[o;;"nth;	iã;{ ;
@	;0;[o;	;"
value;	iã;
@	;"
valueo:Sass::Script::Number:@denominator_units[ ;	iã:@numerator_units[ ;
@	:@original"1:@valuei0[o:Sass::Tree::CommentNode
:
@type:silent;	iä;
@	:@children[ ;["I/* @box version does not have a shorthand, see `legacy-flex-grow` */o:Sass::Tree::MixinNode;"legacy-flex-grow;	iå;{ ;
@	;[ ;0;[o;;"nth;	iå;{ ;
@	;0;[o;	;"
value;	iå;
@	;"
valueo;;@;	iå;[ ;
@	;"1;io;8;"experimental;iè;"{ ;	@;
[ ;#o;!;"flex-support-either;iè;"{ ;	{ ;#0;$[ ;$[o;	;;;iè;	@;"	flexo;%	;"
value;iè;	@;&"
value;#0;$[[o;%;"
value;	@;&"
valueo;	;iá;	@;;);[o;-;.@¥;iá;/[ ;	@;0"0;i o;-;.@¥;iá;/[ ;	@;0"1;io;	;;;iá;	@;"	auto[o;%;"	wrap;	@;&"	wrapo;%	;"flex-wrap-required;iá;	@;&"flex_wrap_required[o;%;"legacy;	@;&"legacyo;%	;"flex-legacy-enabled;iá;	@;&"flex_legacy_enabledo;
;;;ië;	@;
[ ;["Q/* ---------------------------------------------------------------------- */o;
;;;ií;	@;
[ ;["/* $value: Integer */o;7;"flex-grow;iî;T;	@;
[u;'[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:
@lineiï:@options{ :@underscored_name"legacy;	iï:@operator:and;
@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	iï;
@	;"	wrap;	iï;:not;
@	0[o:Sass::Tree::MixinNode;"legacy-flex-grow;	ið:@keywords{ ;
@	:@children[ :@splat0:
@args[o;	;"
value;	ið;
@	;"
valueo;
;;;ió;	@;
[ ;["8/* There is no @flexbox version of this property */o;8;"experimental;iô;"{ ;	@;
[ ;#o;%	;"flex-support;iô;	{ ;&"flex_support;$[o;	;;;iô;	@;"flex-growo;%	;"
value;iô;	@;&"
value;#0;$[[o;%;"
value;	@;&"
valueo;-;.@¥;iî;/[ ;	@;0"0;i [o;%;"	wrap;	@;&"	wrapo;%	;"flex-wrap-required;iî;	@;&"flex_wrap_required[o;%;"legacy;	@;&"legacyo;%	;"flex-legacy-enabled;iî;	@;&"flex_legacy_enabledo;7;"legacy-flex-grow;i÷;T;	@;
[o;8;"experimental;iø;"{ ;	@;
[ ;#o;%	;"box-support;iø;	{ ;&"box_support;$[o;	;;;iø;	@;"box-flexo;%	;"
value;iø;	@;&"
value;#0;$[[o;%;"
value;	@;&"
valueo;-;.@¥;i÷;/[ ;	@;0"0;i o;
;;;iû;	@;
[ ;["Q/* ---------------------------------------------------------------------- */o;
;;;iý;	@;
[ ;["/* $value: Integer */o;7;"flex-shrink;iþ;T;	@;
[o;
;;;iÿ;	@;
[ ;["e/* There is no @box version of this property
 * There is no @flexbox version of this property */o;8;"experimental;i;"{ ;	@;
[ ;#o;%	;"flex-support;i;	{ ;&"flex_support;$[o;	;;;i;	@;"flex-shrinko;%	;"
value;i;	@;&"
value;#0;$[[o;%;"
value;	@;&"
valueo;-;.@¥;iþ;/[ ;	@;0"1;io;
;;;i;	@;
[ ;["Q/* ---------------------------------------------------------------------- */o;
;;;i;	@;
[ ;[",/* $value: united number (eg: 100px) */o;7;"flex-basis;i;T;	@;
[o;
;;;i;	@;
[ ;["e/* There is no @box version of this property
 * There is no @flexbox version of this property */o;8;"experimental;i
;"{ ;	@;
[ ;#o;%	;"flex-support;i
;	{ ;&"flex_support;$[o;	;;;i
;	@;"flex-basiso;%	;"
value;i
;	@;&"
value;#0;$[[o;%;"
value;	@;&"
valueo;	;;;i;	@;"	autoo;
;;;i;	@;
[ ;["Q/* ---------------------------------------------------------------------- */o;
;;;i;	@;
[ ;["£/* Align items along the "cross axis" -- overrides `align-items` value on individual items
 * $value: auto | flex-start | flex-end | center | baseline | stretch */o;7;"align-self;i;T;	@;
[o;
;;;i;	@;
[ ;["S/* children of flex containers
 * There is no @box version of this property */o;8;"experimental;i;"{ ;	@;
[ ;#o;%	;"flexbox-support;i;	{ ;&"flexbox_support;$[o;	;;;i;	@;"flex-item-aligno;!;"flex-translate-value;i;"{ ;	@;#0;$[o;%	;"
value;i;	@;&"
valueo;	;;;i;	@;"flexboxo;8;"experimental;i;"{ ;	@;
[ ;#o;%	;"flex-support;i;	{ ;&"flex_support;$[o;	;;;i;	@;"align-selfo;%	;"
value;i;	@;&"
value;#0;$[[o;%;"
value;	@;&"
valueo;	;;;i;	@;"	autoo;
;;;i;	@;
[ ;["Q/* ---------------------------------------------------------------------- */o;
;;;i;	@;
[ ;["/* $value: Integer */o;7;"
order;i;T;	@;
[u;'[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:
@linei:@options{ :@underscored_name"legacy;	i:@operator:and;
@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	i;
@	;"	wrap;	i;:not;
@	0[o:Sass::Tree::MixinNode;"legacy-order;	i:@keywords{ ;
@	:@children[ :@splat0:
@args[o;	;"
value;	i;
@	;"
valueo;8;"experimental;i;"{ ;	@;
[ ;#o;%	;"flexbox-support;i;	{ ;&"flexbox_support;$[o;	;;;i;	@;"flex-ordero;%	;"
value;i;	@;&"
valueo;8;"experimental;i ;"{ ;	@;
[ ;#o;%	;"flex-support;i ;	{ ;&"flex_support;$[o;	;;;i ;	@;"
ordero;%	;"
value;i ;	@;&"
value;#0;$[[o;%;"
value;	@;&"
valueo;-;.@¥;i;/[ ;	@;0"0;i [o;%;"	wrap;	@;&"	wrapo;%	;"flex-wrap-required;i;	@;&"flex_wrap_required[o;%;"legacy;	@;&"legacyo;%	;"flex-legacy-enabled;i;	@;&"flex_legacy_enabledo;7;"legacy-order;i#;T;	@;
[o;
;;;i$;	@;
[ ;["T/* the @box spec starts the ordering at 1 instead of 0 like the modern specs */o;8;"experimental;i%;"{ ;	@;
[ ;#o;%	;"box-support;i%;	{ ;&"box_support;$[o;	;;;i%;	@;"box-ordinal-groupo;2
;3o;%	;"
value;i%;	@;&"
value;i%;:	plus;	@;5o;-;.@¥;i%;/[ ;	@;0"1;i;#0;$[[o;%;"
value;	@;&"
valueo;-;.@¥;i#;/[ ;	@;0"0;i 